{"version":3,"sources":["components/pixabay-api.js","components/ImagesErrorView/ImagesErrorView.jsx","components/Modal/Modal.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Searchbar/Searchbar.jsx","App.js","index.js"],"names":["requestKey","page","a","axios","params","q","data","hits","Error","defaults","baseURL","key","image_type","orientation","per_page","api","fetchImages","ImagesErrorView","message","role","modalRoot","document","querySelector","Modal","src","alt","onClose","useEffect","console","log","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","className","onClick","event","currentTarget","target","ImageGalleryItem","largeImageUrl","useState","showModal","setShowModal","toggleModal","ImageGallery","images","map","image","webformatURL","tags","largeImageURL","id","Button","scroll","props","scrollToBottom","this","type","Component","Searchbar","onSubmit","setRequestKey","preventDefault","trim","toast","autoComplete","autoFocus","placeholder","value","onChange","toLowerCase","Status","App","error","setError","status","setStatus","setPage","setImages","pixabayApi","then","prevState","catch","finally","newRequestKey","autoClose","length","style","textAlign","color","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.84b60ffa.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst key = '22926721-5d20aa08498ffd1ff2f906542';\r\nconst image_type = 'photo';\r\nconst orientation = 'horizontal';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\naxios.defaults.params = {\r\n  key,\r\n  image_type,\r\n  orientation,\r\n  per_page: 12,\r\n};\r\n\r\nasync function fetchImages(requestKey, page) {\r\n  try {\r\n    const { data } = await axios({\r\n      params: {\r\n        q: requestKey,\r\n        page,\r\n      },\r\n    });\r\n    return data.hits;\r\n  } catch (error) {\r\n    new Error('No response from server');\r\n  }\r\n}\r\n\r\nconst api = { fetchImages };\r\n\r\nexport default api;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction ImagesErrorView({ message }) {\r\n  return (\r\n    <div role=\"alert\">\r\n      <p>Sorry, something went wrong. Error: {message}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nImagesErrorView.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImagesErrorView;","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal({ src, alt, onClose }) {\r\n  useEffect(() => {\r\n    console.log('mount');\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      console.log('unmount');\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  });\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\r\n      <div className=\"Modal\">\r\n        <img src={src} alt={alt} />\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n};","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from '../Modal';\r\n\r\nexport default function ImageGalleryItem({ src, alt, largeImageUrl }) {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        onClick={toggleModal}\r\n        src={src}\r\n        alt={alt}\r\n        className=\"ImageGalleryItemImage\"\r\n      />\r\n      {showModal && (\r\n        <Modal onClose={toggleModal} src={largeImageUrl} alt={alt} />\r\n      )}\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  largeImageUrl: PropTypes.string.isRequired,\r\n};","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n\r\nfunction ImageGallery({ images }) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map((image) => (\r\n        <ImageGalleryItem\r\n          src={image.webformatURL}\r\n          alt={image.tags}\r\n          largeImageUrl={image.largeImageURL}\r\n          key={image.id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import { Component } from 'react';\r\nimport { animateScroll as scroll } from 'react-scroll';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Button extends Component {\r\n  static propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n  };\r\n\r\n  scroll = () => {\r\n    this.props.onClick();\r\n    scroll.scrollToBottom();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <button onClick={this.scroll} className=\"Button\" type=\"button\">\r\n        Load more\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;","import { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [requestKey, setRequestKey] = useState('');\r\n\r\n  const handleRequestChange = event => {\r\n    setRequestKey(event.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (requestKey.trim() === '') {\r\n      toast('Введите запрос.');\r\n      return;\r\n    }\r\n\r\n    onSubmit(requestKey);\r\n    setRequestKey('');\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={requestKey}\r\n          onChange={handleRequestChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToastContainer } from 'react-toastify';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './app.css';\nimport { animateScroll as scroll } from 'react-scroll';\n\nimport pixabayApi from './components/pixabay-api';\nimport ImagesErrorView from './components/ImagesErrorView';\n// import ImagePendingView from './components/ImagePendingView';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Searchbar from './components/Searchbar';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default function App() {\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [requestKey, setRequestKey] = useState('');\n  const [page, setPage] = useState(1);\n  const [images, setImages] = useState([]);\n\n  const handleFormSubmit = newRequestKey => {\n    if (newRequestKey === requestKey) {\n      return;\n    }\n    setRequestKey(newRequestKey);\n    setPage(1);\n    setImages([]);\n  };\n\n  useEffect(() => {\n    if (!requestKey) {\n      return;\n    }\n\n    const renderImages = () => {\n      setStatus(Status.PENDING);\n\n      pixabayApi\n        .fetchImages(requestKey, page)\n        .then(images => setImages(prevState => [...prevState, ...images]))\n        .catch(error => {\n          setError(error);\n          setStatus(Status.REJECTED);\n        })\n        .finally(() => setStatus(Status.RESOLVED));\n    };\n\n    renderImages();\n    scroll.scrollToBottom();\n  }, [requestKey, page]);\n\n  const onLoadMore = () => {\n    setPage(prevState => prevState + 1);\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={handleFormSubmit}></Searchbar>\n      <ToastContainer autoClose={3000} />\n      {status === Status.IDLE && (\n        <p className=\"welcomeText\">Please enter your search term</p>\n      )}\n      {status === Status.REJECTED && (\n        <ImagesErrorView message={error.message} />\n      )}\n      {images.length > 0 && <ImageGallery images={images} />}\n\n      {status === Status.RESOLVED && <Button onClick={onLoadMore} />}\n\n      {status === Status.PENDING && (\n        <Loader\n          style={{ textAlign: 'center' }}\n          className=\"Loader\"\n          type=\"ThreeDots\"\n          color=\"#303f9f\"\n          height={50}\n          width={50}\n        />\n      )}\n    </>\n  );\n}\n\nApp.propTypes = {\n  requestKey: PropTypes.string,\n  page: PropTypes.number,\n  images: PropTypes.array,\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}